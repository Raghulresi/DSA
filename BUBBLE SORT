/* Bubble Sort ---->  O(n^2)
                      It doesn't require any additional memory space to Sort
                      
         Steps ----> 1. Start with the first element of the array.
                     2. Compare the current element with the next element.
                     3. If the current element is greater than the next element, swap them.
                     4. Move to the next element and repeat steps 2 and 3 until the end of the array.
                     5. Repeat steps 1-4 until no more swaps are needed, indicating the array is sorted. */

import java.util.*;
public class Main
{
    public static int[] BubbleSort(int[] arr,int n)
    {
        int temp = 0;
        
        for(int i=0; i<n; i++)
        {
            for(int j=1; j<(n-i); j++)
            {
                if(arr[j-1] > arr[j])
                {
                    temp = arr[j-1];
                    arr[j-1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        
        return arr;
     
    }
    
	public static void main(String[] args) 
	{
	    Scanner sc = new Scanner(System.in);
	    
	    int n = sc.nextInt();
	    int[] arr = new int[n];
	    
	    for(int i=0; i<n; i++)
	    {
	        arr[i]=sc.nextInt();
	    }
	    
	    System.out.println("Array before bubble sorting : ");
	    for(int i=0; i<n; i++)
	    {
	        System.out.print(arr[i]+" ");
	    }
	    System.out.println(" ");
	    
	    BubbleSort(arr,n);
	    
	    System.out.println("Array after bubble sorting :");
	    for(int i=0; i<n; i++)
	    {
	        System.out.print(arr[i]+" ");
	    }
	    System.out.println(" ");
	   	
	}
}
