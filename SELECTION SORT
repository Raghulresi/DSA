/*  Seletion Sort ---->  O(n^2)

            Steps ---->  1. Start with the first element (consider it as the minimum).
                         2. Compare the current element with the rest of the array to find the smallest element.
                         3. Swap the smallest element found with the current element.
                         4. Move to the next element and repeat the process until the array is sorted.  */
import java.util.*;
public class Main
{
    public static int[] SelectionSort(int[] arr,int n)
    {
        
        for(int i=0; i<n-1; i++)
        {
            int small = i;
            
            for(int j=i+1; j<n; j++)
            {
                if(arr[j] < arr[small])
                {
                    small = j;
                }
            }
            
            int temp = arr[small];
            arr[small] = arr[i];
            arr[i] = temp;
        }
        
        return arr;
    }
    
	public static void main(String[] args) 
	{
	    Scanner sc = new Scanner(System.in);
	    
	    int n = sc.nextInt();
	    int[] arr = new int[n];
	    
	    for(int i=0; i<n; i++)
	    {
	        arr[i]=sc.nextInt();
	    }
	    
	    System.out.println("Array before selection sorting : ");
	    for(int i=0; i<n; i++)
	    {
	        System.out.print(arr[i]+" ");
	    }
	    System.out.println(" ");
	    
	    SelectionSort(arr,n);
	    
	    System.out.println("Array after selection sorting :");
	    for(int i=0; i<n; i++)
	    {
	        System.out.print(arr[i]+" ");
	    }
	    System.out.println(" ");
	   	
	}
}
